#include <avr/io.h>
#include <avr/interrupt.h>
#include <avr/cpufunc.h>

void RTC_init(void);
void LED0_init(void);
inline void LED0_toggle(void);

void RTC_init(void)
{
  while (RTC.STATUS > 0)
  {
  ; /* Wait for all register to be synchronized */
  }
  RTC.CLKSEL = RTC_CLKSEL_INT1K_gc;
  /* Run in debug: enabled */
  RTC.DBGCTRL = RTC_DBGRUN_bm;
  RTC.PITINTCTRL = RTC_PI_bm; /* Periodic Interrupt: enabled */
  RTC.PITCTRLA = RTC_PERIOD_CYC1024_gc /* RTC Clock Cycles 32768 */
                  | RTC_PITEN_bm; /* Enable: enabled */
}

void LED0_init(void)
{
  /* Make High (OFF) */
  PORTB.OUT |= PIN5_bm;
  /* Make output */
  PORTB.DIR |= PIN5_bm;
  }
  inline void LED0_toggle(void)
  {
  PORTB.OUTTGL |= PIN5_bm;
}

ISR(RTC_PIT_vect)
{
/* Clear flag by writing '1': */
  RTC.PITINTFLAGS = RTC_PI_bm;
  LED0_toggle();
}

int main(void)
  {
  LED0_init();
  RTC_init();
  /* Enable Global Interrupts */
  sei();
  while (1)
  {
  }
}